// Used to make cloth from flax
// Best way to prevent synchronization issues between client and server is to keep the state of what player should be doing next, what items should be in inventory, etc. client side, and then wait until the state told by server changes to this state
// Made by Purus Cor to demonstrate usage of PBot API
// For more information about API, join Purus Pasta discord
// To suggest features into API, suggest them in discord
const PBotUtils = Java.type('haven.purus.pbot.PBotUtils');
const PBotCharacterAPI = Java.type("haven.purus.pbot.PBotCharacterAPI");
const PBotGobAPI = Java.type('haven.purus.pbot.PBotGobAPI');
const PBotWindowAPI = Java.type('haven.purus.pbot.PBotWindowAPI');
const window = PBotUtils.PBotWindow("StoneDigger", 50, 110, ScriptID);
const btnStart = window.addButton("btnStartClick", "Start", 30, 35, 30);
let stop;
let stockpileName = 'gfx/terobjs/stockpile-stone';
let stone = "Basalt";


function selectTiles(){
	let stoneTiles = [];
	PBotUtils.sysMsg("First, select area to dig stones from!");
	PBotUtils.selectArea();
	const aCoordDig = PBotUtils.getSelectedAreaA();
	const bCoordDig = PBotUtils.getSelectedAreaB();
	const maxX = Math.max(aCoordDig.x, bCoordDig.x);
	const minX = Math.min(aCoordDig.x, bCoordDig.x);
	const maxY = Math.max(aCoordDig.y, bCoordDig.y);
	const minY = Math.min(aCoordDig.y, bCoordDig.y);
	for(let i=minY; i<maxY; i += 11) {
		for(let j=minX; j<maxX; j += 11) {
			if(PBotUtils.tileResnameAt(j, i) === "gfx/tiles/mountain") {
				stoneTiles.push({x: j, y: i});
			}
		}
	}
	return stoneTiles;
}
function selectStockpiles(){
	let stockpiles = [];
	PBotUtils.sysMsg("Second, select area with stockpiles!");
	PBotUtils.selectArea();
	const gobs = PBotUtils.gobsInArea(PBotUtils.getSelectedAreaA(), PBotUtils.getSelectedAreaB());
	for(let i=0; i<gobs.size(); i++) {
		if(gobs[i].getResname() === stockpileName)
			stockpiles.push(gobs[i]);
	}
	return stockpiles;
}
function dig (tiles){
	PBotUtils.pfLeftClick(tiles[0].x, tiles[0].y);
	PBotCharacterAPI.doAct("dig");
	PBotUtils.mapClick(tiles[0].x, tiles[0].y, 1, 0);
	PBotCharacterAPI.cancelAct();
	if(!PBotUtils.getHourglass() >= 0) {
		PBotUtils.waitForHourglass();
	}
}


const main = () => {
	let stop = false;
	let stoneStored = 0
	let stoneInvAmount = PBotUtils.playerInventory().getInventoryItemsByNames([stone]).size();
	let stoneTiles = selectTiles();
	let stoneStockpiles = selectStockpiles();

	do {
		stop = false;
		let stoneStoredLabel = window.addLabel("stone stored: " + stoneStored, 10, 10);
		let stoneStockpilesLabel = window.addLabel("stockpiles left: " + stoneStockpiles.length, 10, 30);
		if(stoneStockpiles.length === 0) {
			PBotUtils.sysMsg("Out of stockpiles!");
			stop = true;
			break;
		}
		//Digging the stone up
		while(!stop && !window.closed() && PBotUtils.playerInventory().freeSlotsInv() > 5){
			if(PBotCharacterAPI.getStamina() < 70){
				PBotUtils.drink(true);
			}
			if(PBotCharacterAPI.getEnergy() < 40){
				PBotUtils.sysMsg("Not Enough Energy! (70+)");
				stop = true;
				break;
			}

			dig(stoneTiles);
			PBotUtils.dropItemFromHand(100);
			PBotUtils.sleep(200);
		}
		//storing the stone in stockpiles
		if(stoneStockpiles.length == 0) {
			stop = true;
			PBotUtils.sysMsg("Ran out of free stockpiles!");
			break;
		}

		PBotUtils.pfRightClick(stoneStockpiles[0], 0);

		PBotWindowAPI.waitForWindow("Stockpile");


		if (PBotWindowAPI.getWindow("Stockpile")){
			stoneInvAmount = PBotUtils.playerInventory().getInventoryItemsByNames([stone]).size();
			const slots = PBotWindowAPI.getStockpileTotalCapacity();
			const used = PBotWindowAPI.getStockpileUsedCapacity();
			const count = Math.min(stoneInvAmount, slots-used);

			PBotWindowAPI.putItemFromInventoryToStockpile(count);
			PBotUtils.sysMsg("Tried to add: " + count + " Into a stockpile containing: " + used + "/" + slots);
			PBotUtils.sleep(200);

			stoneStored += count;
			stoneInvAmount -= count;
			stoneStoredLabel.destroy();
			stoneStoredLabel = window.addLabel("stone stored: " + stoneStored, 10, 10);
			if(count + used === slots){
				PBotUtils.sysMsg("Stockpile Full, starting with a new one ..");
				stoneStockpiles.shift();
			}
		} else {
			PBotUtils.sysMsg("Could not find stockpile window!");
		}



		stoneStoredLabel.destroy();
		stoneStockpilesLabel.destroy();
		PBotUtils.sleep(500);
	} while (!stop && !window.closed());
	PBotUtils.sysMsg("Finished! Total stone dug: " + stoneStored);
}

function btnStartClick(){
	btnStart.destroy();
	main();
}
